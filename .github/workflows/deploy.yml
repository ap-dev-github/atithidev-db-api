name: Deploy AWS Lambda with Serverless

on:
  push:
    branches:
      - main  # Adjust for your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  

      - name: Install npm
        run: npm install 

      - name: Create .env file
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env     

      - name: Configure AWS Credentials from Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

      - name: Run ESLint to check code quality
        run: npx eslint .  # Stops the deployment if there are linting errors

      - name: Install only production dependencies
        run: npm ci --only=production  # only production dependencies are deployed

      - name: Install Serverless Framework (Using Compatible Version)
        run: npm install -g serverless@3.40.0
  

      - name: Deploy with Serverless
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          echo "MONGO_URI is set to $MONGO_URI"  # Debugging: Print the MONGO_URI value
          serverless deploy --verbose

