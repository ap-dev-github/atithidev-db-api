name: Deploy AWS Lambda with Serverless

on:
  push:
    branches:
      - main  # Adjust for your deployment branch

env:
  AWS_REGION: us-east-1  # You can centralize the region here
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  ONGO_URI: ${{ secrets.MONGO_URI }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  

      - name: Install all dependencies (including devDependencies for ESLint)
        run: npm install

      - name: Install AWS SDK (Ensure v3 is Installed)
        run: npm install @aws-sdk/client-s3 @aws-sdk/client-dynamodb @aws-sdk/client-lambda

      - name: Configure AWS Credentials from Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}" >> $GITHUB_ENV  # Include this if you're using session tokens
          echo "AWS_REGION=${{ env.AWS_REGION }}" >> $GITHUB_ENV

      - name: Run ESLint to check code quality
        run: npx eslint .  # Stops the deployment if there are linting errors

      - name: Install only production dependencies
        run: npm ci --only=production  # only production dependencies are deployed

      - name: Install Serverless Framework globally
        run: npm install -g serverless
        
      - name: Deploy with Serverless
        run: |
         serverless deploy 
       

          
